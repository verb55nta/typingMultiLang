{"version":3,"sources":["utils/util.js","index.js","containers/container_app.js","components/component_app.js","components/selectform.js","actions/actions_app.js","reducers/componentReducer.js"],"names":["s","lang","res","i","length","c","l","r","x","Math","random","floor","rootReducer","combineReducers","component","componentReducer","form","formReducer","store","createStore","ReactDOM","render","Provider","document","getElementById","connect","state","console","log","dispatch","next","idNew","getIdByRandom","lLim","uLim","Actions","typingProcess","key","cs","convertForTypingNoSpecial","data","id","tgt","typeCount","displayAnswer","App","props","window","onkeydown","e","this","en","ja","fr","substr","max","initialDisplay","TouchableHighlight","onPress","style","styles","button","underlayColor","Text","buttonText","answer","View","container","parProps","containerR","containerCont","numText","srcText","tgtCompleteText","tgtText","inputInitText","inputText","convText","React","Component","StyleSheet","create","flex","flexDirection","backgroundColor","alignItems","justifyContent","logo","width","height","title","fontWeight","fontSize","borderRadius","padding","marginVertical","marginHorizontal","marginTop","color","ContactForm","handleSubmit","onSubmit","reduxForm","type","typeCountIncrement","completeWord","initialState","action","cntNew","answerNew","wordsData","targetString"],"mappings":"yKAAO,SAA0BA,GAAc,IAAZC,EAAW,uDAAN,KAEhCC,EAAM,GAEV,GAAa,OAATD,EACA,IAAK,IAAIE,EAAI,EAAGA,EAAIH,EAAEI,OAAQD,IAAI,CAC9B,IAAIE,EAAIL,EAAEG,GACV,OAAQE,GACJ,IAAK,OACDH,GAAO,KACP,MACJ,IAAK,OACDA,GAAO,KACP,MACJ,IAAK,OACDA,GAAO,KACP,MAEJ,IAAK,OACDA,GAAO,KACP,MACJ,IAAK,OACDA,GAAO,KACP,MACJ,IAAK,OACDA,GAAO,KACP,MACJ,IAAK,OACDA,GAAO,KACP,MACJ,IAAK,OACDA,GAAO,KACP,MAGJ,IAAK,OACDA,GAAO,KACP,MACJ,IAAK,OACDA,GAAO,KACP,MAEJ,IAAK,OACDA,GAAO,KACP,MACJ,IAAK,OACDA,GAAO,KACP,MAGJ,IAAK,OACDA,GAAO,KACP,MACJ,IAAK,SACDA,GAAO,KACP,MAEJ,QACIA,GAAOG,QAUnBH,EAAMF,EAMV,OAAOE,G,4BAIJ,SAAmCF,GAAc,IAAZC,EAAW,uDAAN,KAEzCC,EAAM,GAEV,GAAa,OAATD,EACA,IAAK,IAAIE,EAAI,EAAGA,EAAIH,EAAEI,OAAQD,IAAI,CAC9B,IAAIE,EAAIL,EAAEG,GACV,OAAQE,GACJ,IAAK,OACDH,GAAO,IACP,MACJ,IAAK,OACDA,GAAO,IACP,MACJ,IAAK,OACDA,GAAO,IACP,MAEJ,IAAK,OACDA,GAAO,IACP,MACJ,IAAK,OACDA,GAAO,IACP,MACJ,IAAK,OACDA,GAAO,IACP,MACJ,IAAK,OACDA,GAAO,IACP,MACJ,IAAK,OACDA,GAAO,IACP,MAGJ,IAAK,OACDA,GAAO,IACP,MACJ,IAAK,OACDA,GAAO,IACP,MAEJ,IAAK,OACDA,GAAO,IACP,MACJ,IAAK,OACDA,GAAO,IACP,MAGJ,IAAK,OACDA,GAAO,IACP,MACJ,IAAK,SACDA,GAAO,KACP,MAEJ,QACIA,GAAOG,QAUnBH,EAAMF,EAMV,OAAOE,G,gBAIJ,SAAuBI,EAAEC,GAE5B,IAAIC,EAAIC,KAAKC,SAGb,OAFWJ,EAAKG,KAAKE,MAAMH,GAAKD,EAAED,EAAE,M,sEC/JxC,UACA,WAEA,OAIA,YACA,QACA,SAEA,YAEA,YASMM,GAAc,IAAAC,iBAAgB,CAChCC,UAAUC,UAIVC,KAAMC,YAGJC,GAAQ,IAAAC,aAAYP,GAG1BQ,UAASC,OACL,wBAAC,EAAAC,SAAD,CAAUJ,MAAOA,GACb,wBAAC,UAAD,OAEJK,SAASC,eAAe,U,wHCrC5B,YAEA,YACA,YAEA,S,OAsCe,IAAAC,UAnCf,SAAyBC,GAGrB,OAFAC,QAAQC,IAAIF,GAELA,EAAMZ,aAGjB,SAA4Be,GACxB,MAAO,CACHC,KAAM,SAACJ,GACH,IAAMK,GAAQ,IAAAC,eAAcN,EAAMO,KAAMP,EAAMQ,MAC9CL,EAASM,UAAA,KAAgBJ,KAE7BK,cAAe,SAACV,EAAMW,GAClB,GAAgB,WAAZA,EAAIA,KAAgC,eAAZA,EAAIA,IAAsB,CAClD,IAAMN,GAAQ,IAAAC,eAAcN,EAAMO,KAAMP,EAAMQ,MAC9CL,EAASM,UAAA,KAAgBJ,QAExB,CACD,IAAMO,GAAK,IAAAC,2BAA0Bb,EAAMc,KAAKd,EAAMe,IAAIf,EAAMgB,MAE5DL,EAAIA,MAAQC,EAAGZ,EAAMiB,aACrBd,EAASM,UAAA,sBACLT,EAAMiB,WAAaL,EAAGlC,OAAS,GAC/ByB,EAASM,UAAA,mBAMzBS,cAAe,WACXf,EAASM,UAAA,oBAKN,CAA6CU,W,8KC3C5D,UACA,SAMA,SACA,Y,2cAEqBA,E,0CAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,GACNC,OAAOC,UAAY,SAACC,GAChB,IAAMvB,EAAM,EAAKoB,MACjBA,EAAMV,cAAcV,EAAOuB,IAJhB,E,sDAUf,IAAIH,EAAQI,KAAKJ,MACbL,EAAKK,EAAML,GAEXzC,GAAI,IAAAuC,2BAA2BO,EAAMN,KAAKC,GAAIK,EAAMJ,MAEpDS,EAAKL,EAAMN,KAAKC,GAAX,GACLW,EAAKN,EAAMN,KAAKC,GAAX,GACLY,EAAKP,EAAMN,KAAKC,GAAX,GACLC,EAAM1C,EAAEsD,OAAO,EAAE7C,KAAK8C,IAAIT,EAAMH,UAAUG,EAAMU,iBAKhD1B,EAAO,wBAAC,EAAA2B,mBAAD,CACPC,QAAS,kBAAMZ,EAAMhB,KAAKgB,IAC1Ba,MAAOC,EAAOC,OACdC,cAAe,WACf,wBAAC,EAAAC,KAAD,CAAMJ,MAAOC,EAAOI,YAApB,SAGAC,EAAS,wBAAC,EAAAR,mBAAD,CACTC,QAAS,kBAAMZ,EAAMF,cAAcE,IACnCa,MAAOC,EAAOC,OACdC,cAAe,WACf,wBAAC,EAAAC,KAAD,CAAMJ,MAAOC,EAAOI,YAApB,WAGJ,OAEI,wBAAC,EAAAE,KAAD,CAAMP,MAAOC,EAAOO,WAChB,wBAAC,UAAD,CAAYC,SAAUtB,IACtB,wBAAC,EAAAoB,KAAD,CAAMP,MAAOC,EAAOS,YACfvC,EAAMmC,GAEX,wBAAC,EAAAC,KAAD,CAAMP,MAAOC,EAAOU,eAEhB,wBAAC,EAAAP,KAAD,CAAMJ,MAAOC,EAAOW,SAAU9B,GAC9B,wBAAC,EAAAsB,KAAD,CAAMJ,MAAOC,EAAOY,SAAUrB,EAA9B,IAAmCC,EAAnC,KACA,wBAAC,EAAAW,KAAD,CAAMJ,MAAwB,IAAjBb,EAAMmB,OAAeL,EAAOa,gBAAkBb,EAAOc,SAAUrB,EAA5E,KACA,wBAAC,EAAAU,KAAD,CAAMJ,MAAyB,IAAlBb,EAAMH,UAAgBiB,EAAOe,cAAgBf,EAAOgB,WAAYlC,EAA7E,KACA,wBAAC,EAAAqB,KAAD,CAAMJ,MAAOC,EAAOiB,UAAW7E,S,GApDlB8E,UAAMC,W,YA4DvC,IAAMnB,EAASoB,aAAWC,OAAO,CAC7Bd,UAAW,CACPe,KAAM,EACNC,cAAe,SACfC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAGpBjB,WAAY,CACRa,KAAM,EACNC,cAAe,MACfC,gBAAiB,OAEjBC,WAAY,UAGhBf,cAAe,CACXY,KAAM,EACNC,cAAe,SACfC,gBAAiB,OACjBC,WAAY,UAIhBE,KAAM,CACFC,MAAO,IACPC,OAAQ,KAEZC,MAAO,CACHC,WAAY,OACZC,SAAU,IAEd/B,OAAQ,CACJgC,aAAc,EACdC,QAAS,GACTC,eAAgB,GAChBC,iBAAkB,GAClBC,UAAW,GACXb,gBAAiB,WAErBpB,WAAY,CACRkC,MAAO,OACPP,WAAY,OACZC,SAAU,IAEdrB,QAAS,CACLqB,SAAU,GACXM,MAAM,QAET1B,QAAS,CACLoB,SAAU,GACVM,MAAO,QAEXxB,QAAS,CACLkB,SAAU,GACVM,MAAO,QAEXvB,cAAe,CACXiB,SAAU,GACVM,MAAO,QAEXtB,UAAW,CACPgB,SAAU,GACVM,MAAO,QAEXzB,gBAAgB,CACZmB,SAAU,GACVM,MAAO,QAEXrB,SAAU,CACNe,SAAU,EACVM,MAAO,W,kGC9If,cAYIC,GAXJ,OAOA,MAIkB,SAAArD,GAAU,IAClBsD,EAAiBtD,EAAjBsD,aACR,OAAO,gCAAMC,SAAUD,M,EAGzBD,GAAc,EARd,OAQcG,WAAU,CAEtBtF,KAAM,WAFM,CAGXmF,G,2GCpBY,CACXrE,KAAM,SAACC,GACH,MAAO,CAAEwE,KAAM,OAAQxE,MAAOA,IAElCyE,mBAAoB,WAChB,MAAO,CAAED,KAAM,uBAEnBE,aAAc,WACV,MAAO,CAAEF,KAAM,mB,2FCSR,WAAuD,IAA7B7E,EAA4B,uDAAtBgF,EAAcC,EAAQ,uCAEjE,OAAQA,EAAOJ,MACX,IAAK,OAED,IAAMxE,EAAQ4E,EAAO5E,MAErB,OAAO,aAAc,GAAIL,EAAO,CAC5Be,GAAIV,EACJY,UAAW,EACXsB,OAAO,IAGf,IAAK,qBACD,IAAM2C,EAASlF,EAAMiB,UAAY,EACjC,OAAO,aAAc,GAAIjB,EAAO,CAC5BiB,UAAWiE,IAEnB,IAAK,eACD,IAAMC,EAAY,EAClB,OAAO,aAAc,GAAInF,EAAO,CAC5BuC,OAAO4C,IAGf,QACI,OAAOnF,I,cA1CnB,YAKMgF,EAAe,CACjBjE,GAAI,EACJC,IAAK,KACLF,KAAMsE,UACNnE,UAAW,EACXV,KAAM,EACNC,KAAM,MACN+B,OAAQ,EACRT,eAAgB,EAChBuD,aAAcD,UAAU,GAAV,K","file":"static/js/main.67595ffb.chunk.js","sourcesContent":["export function convertForTyping(s,lang='fr') {\n    \n    let res = '';\n\n    if (lang === 'fr') {\n        for (let i = 0; i < s.length; i++){\n            let c = s[i];\n            switch (c) {\n                case 'à':\n                    res += '`a';\n                    break;\n                case 'è':\n                    res += '`e';\n                    break;\n                case 'ù':\n                    res += '`u';\n                    break;\n                \n                case 'â':\n                    res += '^a';\n                    break;\n                case 'ê':\n                    res += '^e';\n                    break;\n                case 'î':\n                    res += '^i';\n                    break;\n                case 'ô':\n                    res += '^o';\n                    break;\n                case 'û':\n                    res += '^u';\n                    break;\n                \n                \n                case 'é':\n                    res += '\\'e';\n                    break;\n                case 'É':\n                    res += '\\'E';\n                    break;\n\n                case 'ë':\n                    res += ':e';\n                    break;\n                case 'ï':\n                    res += ':i';\n                    break;\n            \n                \n                case 'ç':\n                    res += 'cz';\n                    break;\n                case 'œ':\n                    res += 'oe';\n                    break;\n                \n                default:\n                    res += c;\n                    break;\n            }\n\n    \n        }\n    \n    }\n\n    else {\n        res = s;\n    }\n\n\n\n\n    return res;\n\n}\n\nexport function convertForTypingNoSpecial(s,lang='fr') {\n    \n    let res = '';\n\n    if (lang === 'fr') {\n        for (let i = 0; i < s.length; i++){\n            let c = s[i];\n            switch (c) {\n                case 'à':\n                    res += 'a';\n                    break;\n                case 'è':\n                    res += 'e';\n                    break;\n                case 'ù':\n                    res += 'u';\n                    break;\n                \n                case 'â':\n                    res += 'a';\n                    break;\n                case 'ê':\n                    res += 'e';\n                    break;\n                case 'î':\n                    res += 'i';\n                    break;\n                case 'ô':\n                    res += 'o';\n                    break;\n                case 'û':\n                    res += 'u';\n                    break;\n                \n                \n                case 'é':\n                    res += 'e';\n                    break;\n                case 'É':\n                    res += 'E';\n                    break;\n\n                case 'ë':\n                    res += 'e';\n                    break;\n                case 'ï':\n                    res += 'i';\n                    break;\n            \n                \n                case 'ç':\n                    res += 'c';\n                    break;\n                case 'œ':\n                    res += 'oe';\n                    break;\n                \n                default:\n                    res += c;\n                    break;\n            }\n\n    \n        }\n    \n    }\n\n    else {\n        res = s;\n    }\n\n\n\n\n    return res;\n\n}\n\nexport function getIdByRandom(l,r){\n\n    let x = Math.random();\n    let res =  l + (Math.floor(x * (r-l+1))) ;\n\n    return res\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import {render} from 'react-dom'\nimport './index.css';\n//import App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nimport { createStore,combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport { Field, reduxForm,reducer as formReducer } from 'redux-form'\n\nimport ContainerApp from './containers/container_app'\n\nimport componentReducer from './reducers/componentReducer'\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n\nconst rootReducer = combineReducers({\n    component:componentReducer,\n    // ...your other reducers here\n    // you have to pass formReducer under 'form' key,\n    // for custom keys look up the docs for 'getFormState'\n    form: formReducer,\n  })\n\nconst store = createStore(rootReducer)\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ContainerApp />\n    </Provider>,\n    document.getElementById('root')\n)","import { connect } from 'react-redux'\n\nimport App from '../components/component_app'\nimport Actions from '../actions/actions_app'\n\nimport {getIdByRandom} from '../utils/util'\nimport {convertForTypingNoSpecial} from '../utils/util'\n\nfunction mapStateToProps(state) {\n    console.log(state);\n    //return { state:state.component };\n    return state.component;\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        next: (state) => {\n            const idNew = getIdByRandom(state.lLim, state.uLim);\n            dispatch(Actions['next'](idNew));\n        },\n        typingProcess: (state,key) => {\n            if (key.key === 'Escape' || key.key === 'ArrowRight') {\n                const idNew = getIdByRandom(state.lLim, state.uLim);\n                dispatch(Actions['next'](idNew));\n            }\n            else {\n                const cs = convertForTypingNoSpecial(state.data[state.id][state.tgt]); //副作用？\n                //console.log(cs[state.typeCount]);\n                if (key.key === cs[state.typeCount]) {\n                    dispatch(Actions['typeCountIncrement']());\n                    if (state.typeCount >= cs.length - 1) {\n                        dispatch(Actions['completeWord']());\n                    }\n                }\n                \n            }\n        },\n        displayAnswer: () => {\n            dispatch(Actions['completeWord']());\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react'\nimport {\n    StyleSheet,\n    Text,\n    View,\n    TouchableHighlight,\n} from 'react-native';\nimport {convertForTypingNoSpecial} from '../utils/util'\nimport SelectForm from './selectform'\n\nexport default class App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        window.onkeydown = (e) => {\n            const state=this.props\n            props.typingProcess(state, e);\n        }\n    }\n\n    render() { \n\n        let props = this.props;\n        let id = props.id;\n        \n        let s = convertForTypingNoSpecial( props.data[id][props.tgt] );\n\n        let en = props.data[id]['en'];\n        let ja = props.data[id]['ja'];\n        let fr = props.data[id]['fr'];\n        let tgt = s.substr(0,Math.max(props.typeCount,props.initialDisplay));\n        //let tgt = s.substr(0,props.typeCount);\n        //let de = props.data[id]['de'];\n        let de = \"\";\n\n        let next = <TouchableHighlight\n            onPress={() => props.next(props)}\n            style={styles.button}\n            underlayColor={'#0A84D0'}>\n            <Text style={styles.buttonText}>Next</Text>\n        </TouchableHighlight>\n\n        let answer = <TouchableHighlight\n            onPress={() => props.displayAnswer(props)}\n            style={styles.button}\n            underlayColor={'#0A84D0'}>\n            <Text style={styles.buttonText}>Answer</Text>\n        </TouchableHighlight>\n        \n        return (\n\n            <View style={styles.container}>\n                <SelectForm parProps={props} />        \n                <View style={styles.containerR}>\n                    {next}{answer}\n                </View>\n                <View style={styles.containerCont}>\n                \n                    <Text style={styles.numText}>{id}</Text>\n                    <Text style={styles.srcText}>{en} {ja} </Text>\n                    <Text style={props.answer === 1 ? styles.tgtCompleteText : styles.tgtText}>{fr} </Text>\n                    <Text style={props.typeCount===0 ? styles.inputInitText : styles.inputText}>{tgt} </Text>\n                    <Text style={styles.convText}>{s}</Text>\n                </View>\n            </View>\n\n        );  \n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n        //margin:'auto',\n    },\n    containerR: {\n        flex: 1,\n        flexDirection: 'row',\n        backgroundColor: '#fff',\n        //justifyContent: 'center',\n        alignItems: 'center',\n        //margin:'auto',\n    },\n    containerCont: {\n        flex: 4,\n        flexDirection: 'column',\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        //justifyContent: 'center',\n        //margin:'auto',\n    },\n    logo: {\n        width: 300,\n        height: 300,\n    },\n    title: {\n        fontWeight: 'bold',\n        fontSize: 16,\n    },\n    button: {\n        borderRadius: 3,\n        padding: 20,\n        marginVertical: 10,\n        marginHorizontal: 10,\n        marginTop: 10,\n        backgroundColor: '#1B95E0',\n    },\n    buttonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 16,\n    },\n    numText: {\n        fontSize: 20,\n       color:'#000' \n    }, \n    srcText: {\n        fontSize: 32,\n        color: '#000'\n    },\n    tgtText: {\n        fontSize: 48,\n        color: '#FFF'\n    },\n    inputInitText: {\n        fontSize: 24,\n        color: '#888'\n    },\n    inputText: {\n        fontSize: 24,\n        color: '#00F'\n    },\n    tgtCompleteText:{\n        fontSize: 48,\n        color: '#000'\n    },\n    convText: {\n        fontSize: 8,\n        color: '#888'\n    }\n});\n\n","import React from 'react'\nimport {\n    StyleSheet,\n    Text,\n    View,\n    TouchableHighlight,\n} from 'react-native';\n\nimport { createStore, combineReducers } from 'redux'\nimport { Field, reduxForm,reducer as formReducer } from 'redux-form'\n\n\nlet ContactForm = props => {\n  const { handleSubmit } = props\n  return <form onSubmit={handleSubmit}>{/* form body*/}</form>\n}\n\nContactForm = reduxForm({\n  // a unique name for the form\n  form: 'contact'\n})(ContactForm)\n\nexport default ContactForm","export default {\n    next: (idNew) => {\n        return { type: 'next', idNew: idNew };\n    },\n    typeCountIncrement: () => {\n        return { type: 'typeCountIncrement' };\n    },\n    completeWord: () => {\n        return { type: 'completeWord' };\n    },\n\n}","import wordsData from './wordsData.json';\n\n\n\n\nconst initialState = {\n    id: 0,\n    tgt: 'fr',\n    data: wordsData,\n    typeCount: 0,\n    lLim: 0,\n    uLim: 11999,\n    answer: 0,\n    initialDisplay: 1,\n    targetString: wordsData[0]['en'],\n}\n\nexport default function componentReducer(state=initialState, action) {\n    \n    switch (action.type) {\n        case 'next':\n\n            const idNew = action.idNew;\n\n            return Object.assign({}, state, {\n                id: idNew,\n                typeCount: 0,\n                answer:0,\n                \n            });\n        case 'typeCountIncrement':\n            const cntNew = state.typeCount + 1;\n            return Object.assign({}, state, {\n                typeCount: cntNew,\n            });\n        case 'completeWord':\n            const answerNew = 1;\n            return Object.assign({}, state, {\n                answer:answerNew,\n            });\n\n        default:\n            return state;\n    }\n\n}"],"sourceRoot":""}